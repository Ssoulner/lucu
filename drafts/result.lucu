##
# hypothetical syntax for tagged unions and the Unwrap effect
# Unwrap will have ? as a shorthand like the Try trait in Rust
##

tagged Result $ok $err {
	struct Ok($ok)
	struct Err($err)
}

tagged Option $ty {
	struct Some($ty)
	struct None
}

effect Unwrap $ty {
	type Ok
	fun unwrap(t $ty) Ok
}

handle Unwrap Result $ok $err
	fails Result $ok2 $err
{
	type Ok = $ok
	fun unwrap(t Result $ok $err) Ok {
		match t {
			case Ok(v)  { v }
			case Err(e) { fail Err(e) }
		}
	}
}

handle Unwrap Option $ty
	fails Option $ty2
{
	type Ok = $ty
	fun unwrap(t Option $ty) Ok {
		match t {
			case Some(v) { v }
			case None    { fail None }
		}
	}
}

handle Unwrap Option $ty
	fails
{
	type Ok = $ty
	fun unwrap(t Option $ty) Ok {
		match t {
			case Some(v) { v }
			case None    { fail }
		}
	}
}
